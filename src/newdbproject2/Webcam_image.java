/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package newdbproject2;

import com.github.sarxos.webcam.Webcam;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.awt.image.RenderedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;


/**
 *
 * @author user
 */
public class Webcam_image extends javax.swing.JFrame {

 List<Webcam> camlist;
 Boolean isRunning=false;
Webcam cam1;
Connection con;
PreparedStatement ps;
String sql;
String filepath;
byte[] byte_Image;
File pic;

    public Webcam_image() {
        initComponents();
        camlist=Webcam.getWebcams();
        cam_combo.removeAllItems();
        for(int i=0;i<camlist.size();i++){
        cam_combo.addItem(camlist.get(i).toString());
        }
        con=Connection_class.getconnection();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        webcam_show = new javax.swing.JLabel();
        startcam = new javax.swing.JButton();
        takephoto = new javax.swing.JButton();
        cam_combo = new javax.swing.JComboBox<>();
        place_image = new javax.swing.JLabel();
        webcam_show1 = new javax.swing.JLabel();
        sendtodb = new javax.swing.JButton();
        dblabel = new javax.swing.JLabel();
        idtextfield = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        webcam_show.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 102), 3));

        startcam.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        startcam.setText("Start cam");
        startcam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startcamActionPerformed(evt);
            }
        });

        takephoto.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        takephoto.setText("Take Photo");
        takephoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                takephotoActionPerformed(evt);
            }
        });

        cam_combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        place_image.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        place_image.setText("Available Cameras");

        webcam_show1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        sendtodb.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        sendtodb.setText("Send");
        sendtodb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendtodbActionPerformed(evt);
            }
        });

        dblabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setText("Get passport");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Title");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(webcam_show, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(webcam_show1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56)
                        .addComponent(dblabel, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(place_image, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(startcam, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cam_combo, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(takephoto)
                                .addGap(26, 26, 26)
                                .addComponent(sendtodb)
                                .addGap(98, 98, 98)
                                .addComponent(jButton1)))
                        .addContainerGap(108, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(134, 134, 134))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(idtextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(webcam_show, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(webcam_show1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dblabel, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(idtextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(place_image)
                    .addComponent(cam_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startcam)
                    .addComponent(takephoto)
                    .addComponent(sendtodb)
                    .addComponent(jButton1))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startcamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startcamActionPerformed
        if(!isRunning){
            isRunning=true;
        new Videofeed().start();
        }
        else{
        isRunning=false;
        }
    }//GEN-LAST:event_startcamActionPerformed

    private void takephotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_takephotoActionPerformed
        BufferedImage image2=cam1.getImage();
        //this.pic=new File("hello.jpg");
        //ImageIO.write((RenderedImage) image2,"JPG",pic);
        Image image3=image2.getScaledInstance(webcam_show1.getWidth(), webcam_show1.getHeight(),Image.SCALE_SMOOTH );
        webcam_show1.setIcon(new ImageIcon(image3));
      
    }//GEN-LAST:event_takephotoActionPerformed
    public static Image converter(Icon icon){
    if(icon instanceof ImageIcon){
    return(((ImageIcon) icon).getImage());
    }
    else{
    int w=icon.getIconWidth();
    int h=icon.getIconHeight();
    BufferedImage buf=new BufferedImage(w,h,BufferedImage.TYPE_INT_ARGB);
    Graphics2D g2d=buf.createGraphics();
    icon.paintIcon(null,g2d, 0, 0);
    return buf;
    }
    }
    public static BufferedImage image2buf(Image img ){
        if(img instanceof BufferedImage){
        return (BufferedImage)img;
        }
        else{
        BufferedImage bi=new BufferedImage(img.getWidth(null),img.getHeight(null),BufferedImage.TYPE_INT_ARGB);
        Graphics2D g2d=bi.createGraphics();
        g2d.drawImage(img,0,0,null);
        g2d.dispose();
        return bi;
        }


}
    private void sendtodbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendtodbActionPerformed
//            try {
//                ps=con.prepareStatement(sql);
//                String tit=JOptionPane.showInputDialog(null);
//                ps.setString(1,tit);
//                File ff=new File(filepath);
//                FileInputStream fin=new FileInputStream(ff);
//                ps.setBinaryStream(2,fin,fin.available());
//               int result= ps.executeUpdate();
//               JOptionPane.showMessageDialog(this,result+" Photo successfully inserted");
 //           } catch (SQLException ex) {
//               JOptionPane.showMessageDialog(this,""+ex.getMessage());
//                Logger.getLogger(Webcam_image.class.getName()).log(Level.SEVERE, null, ex);
//           } catch (FileNotFoundException ex) {
//                Logger.getLogger(Webcam_image.class.getName()).log(Level.SEVERE, null, ex);
//            } catch (IOException ex) {
//                Logger.getLogger(Webcam_image.class.getName()).log(Level.SEVERE, null, ex);
    if(this.webcam_show.getIcon()!=null){
                sql="INSERT INTO pic_table (title,passport) values(?,?)";
    try {
                Icon ic1=this.webcam_show1.getIcon();
                ImageIcon icc=(ImageIcon)ic1;
                Image ic2=icc.getImage();
                BufferedImage bfi=image2buf(ic2);
                //BufferedImage bfi=(BufferedImage)ic2;
                this.pic=new File("bfi.jpg");
                ImageIO.write(bfi,"JPG",pic);
                FileInputStream fin=new FileInputStream(pic);
                String tit=JOptionPane.showInputDialog(null);
                ps=con.prepareStatement(sql);
                ps.setString(1, tit);
                ps.setBinaryStream(2, fin,fin.available());
                int result=ps.executeUpdate();
                JOptionPane.showMessageDialog(this, result +" Photo successfully inserted");
                pic.delete();
            }  
              catch (SQLException ex) {
               JOptionPane.showMessageDialog(this,""+ex.getMessage());
                Logger.getLogger(Webcam_image.class.getName()).log(Level.SEVERE, null, ex);
        }
            catch (FileNotFoundException ex) {
                Logger.getLogger(Webcam_image.class.getName()).log(Level.SEVERE, null, ex);
            } 
            catch (IOException ex) {
                Logger.getLogger(Webcam_image.class.getName()).log(Level.SEVERE, null, ex);
            }

            }
        else{
            JOptionPane.showMessageDialog(this,"There is no Image set","Attention",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_sendtodbActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(this.idtextfield.getText().equals("")){
        JOptionPane.showMessageDialog(this,"Please input ID");
        }
        else{
            try {
                sql="Select * from pic_table where picid=?";
                ps=con.prepareStatement(sql);
                int sn_=Integer.parseInt(this.idtextfield.getText());
                ps.setInt(1,sn_);
               ResultSet rs=ps.executeQuery();
               if(rs.next()){
               byte_Image=rs.getBytes("passport");
               String title_=rs.getString("title");
               ImageIcon ic1=new ImageIcon(byte_Image);
               Image label_Image=ic1.getImage();
               //Image label_Image=Toolkit.getDefaultToolkit().createImage(byte_Image);
               Image ic_Image=label_Image.getScaledInstance(this.dblabel.getWidth(), dblabel.getHeight(),Image.SCALE_SMOOTH);
               this.dblabel.setIcon(new ImageIcon(ic_Image));
               this.jLabel1.setText(title_);
               }
               else{
               JOptionPane.showMessageDialog(this,"No image in location");
               }
                } 
            catch (SQLException ex) {
                Logger.getLogger(Webcam_image.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Webcam_image.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Webcam_image.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Webcam_image.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Webcam_image.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Webcam_image().setVisible(true);
            }
        });
    }
    class Videofeed extends Thread{
    @Override
    public  void run(){
    while(isRunning){
        try {
            int ind=cam_combo.getSelectedIndex();
            cam1=camlist.get(ind);
            cam1.open();
            Image img =cam1.getImage();
            webcam_show.setIcon(new ImageIcon(img));
            Thread.sleep(30);
        } catch (InterruptedException ex) {
            Logger.getLogger(Webcam_image.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JComboBox<String> cam_combo;
    private javax.swing.JLabel dblabel;
    private javax.swing.JTextField idtextfield;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel place_image;
    private javax.swing.JButton sendtodb;
    private javax.swing.JButton startcam;
    private javax.swing.JButton takephoto;
    public static javax.swing.JLabel webcam_show;
    public javax.swing.JLabel webcam_show1;
    // End of variables declaration//GEN-END:variables
}
